package cn.edu.scau.hlyz.service.impl;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.edu.scau.hlyz.dao.AdvisoryMapper;
import cn.edu.scau.hlyz.dao.ReplyMapper;
import cn.edu.scau.hlyz.entity.Advisory;
import cn.edu.scau.hlyz.entity.Reply;
import cn.edu.scau.hlyz.service.AdvisoryService;

@Service
public class AdvisoryServiceImpl implements AdvisoryService{
	Logger logger = Logger.getLogger(AdvisoryServiceImpl.class);
	@Autowired
	private AdvisoryMapper adi;
	@Autowired
	private ReplyMapper rei;

	@Override
	public Boolean addAdvisory(Advisory advisory) {
		// TODO Auto-generated method stub
		int a=adi.save(advisory);
		if(a==1){
			logger.info("add advisory success");
			return true;
		}	
		else{
			logger.error("add advisory fail");
			return false;
		}	
	}

	@Override
	public Boolean addRespondence(Reply reply) {
		// TODO Auto-generated method stub
		int a=rei.save(reply);
		if(a==1){
			logger.info("add reply success");
			return true;
		}	
		else{
			logger.error("add reply fail");
			return false;
		}
	}

	@Override
	public Advisory findAdvisoryById(String id) {
		// TODO Auto-generated method stub
		logger.info("select advisory by id");
		return adi.findById(id);
	}

	@Override
	public List<Advisory> findAllAdvisoryOfDoctor(String doctorId, int page, int num) {
		// TODO Auto-generated method stub
		logger.info("select advisory by doctor");
		return adi.findByDoctor(doctorId, (page-1)*num, num);
	}

	@Override
	public List<Advisory> findAllAdvisoryOfPatient(String patientId, int page, int num) {
		// TODO Auto-generated method stub
		logger.info("select advisory by patient");
		return adi.findByPatient(patientId, (page-1)*num, num);
	}

	@Override
	public List<Reply> findAllRespondenceOfAdvisory(String advisoryId, int page, int num) {
		// TODO Auto-generated method stub
		logger.info("select reply by advisory");
		return rei.findByAdvisory(advisoryId, (page-1)*num, num);
	}
	

}
